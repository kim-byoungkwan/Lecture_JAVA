package kr.ac.kopo.day09;

/*
 * 변수는 오버라이딩의 개념이 성립하지 않는다. 오직 오버라이딩의 개념은 메소드에만 적용된다.
 * 
 * 
 * 
 * 부모클래스를 상속받은 자식클래스의 경우 자식클래스가 표현하는 객체공간이 직관적으로 부모의 모든 것을 이어 받았으므로 더 큰 객체공간으로 
 * 생각하게된다. 그런데, 명시적형변환의 경우 좌변의 자식클래스의 참조변수가 표현하는 공간이 생성되지 않고, 부모클래스의 객체인스턴스 공간만이
 * 생성되었으므로, 좌변의 자식클래스의 참조변수가 부모클래스의 객체인스턴스 new 부모클래스() 를 등호로 가키리는 것은 성립될 수 없다. 즉
 * 명시적형변환이 성립할 수 없는 것이다.
 * 
 *  그런데, 위의 명시적형변환을 실행하기 전에 부모클래스 참조변수 = new 자식클래스(); 와 같이 묵시적 형변환을 미리 실행해주면,
 *  
 *  instanceof는 왼쪽과 오른쪽이 상속관계에 있을때만 의미가 있다. 이 키워드는 왼쪽와 오른쪽의 "객체명" 이 표현하는 객체공간이 정확히 일치하는지
 *  를 판단해주는 것이다.
 * 
 * 
 * 
 */


public class CastMain02 {

	public static void main(String[] args) {
		
//		Child01 c = (Child01)new Parent();	// 실행시 오류발생
		
		Parent p = new Child01();
		Child01 c2 = (Child01)p;
		
		c2.sleep();
		c2.study();
	}
}
